<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"

       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
          http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
          http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd
">
    <context:annotation-config />
    <util:properties id="datasourceProperties" location="classpath:config/db.properties" />
<!--    <bean id="jpa-jtaDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName">
            <value>oa-datasource</value>
        </property>
        <property name="resourceRef">
            <value>false</value>
        </property>
        <property name="jndiEnvironment">
            <props>
                <prop key="java.naming.provider.url">t3://localhost:7001</prop>
                <prop key="java.naming.factory.initial">weblogic.jndi.WLInitialContextFactory</prop>
            </props>
        </property>
    </bean>-->
<!--    <bean id="localDataSource" class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
        <property name="driverClass" value="#{datasourceProperties[driverClass]}" />
        <property name="url" value="#{datasourceProperties[url]}" />
        <property name="username" value="#{datasourceProperties[username]}" />
        <property name="password" value="#{datasourceProperties[password]}" />
    </bean>-->
    <bean id="localDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="#{datasourceProperties[driverClass]}" />
        <property name="jdbcUrl" value="#{datasourceProperties[url]}" />
        <property name="user" value="#{datasourceProperties[username]}" />
        <property name="password" value="#{datasourceProperties[password]}" />
        <property name="initialPoolSize" value="#{datasourceProperties[initialPoolSize]}" />
        <property name="minPoolSize" value="#{datasourceProperties[minPoolSize]}" />
        <property name="maxPoolSize" value="#{datasourceProperties[maxPoolSize]}" />
        <property name="acquireIncrement" value="#{datasourceProperties[acquireIncrement]}" />
    </bean>
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
             p:dataSource-ref="localDataSource"
             p:persistenceXmlLocation="classpath:META-INF/persistence.xml"
             p:packagesToScan-ref="packageToScan"
             p:persistenceUnitName="YaoOA_PU"
             p:persistenceProvider-ref="jpaProvider" 
             p:jpaProperties-ref="jpaProperties"
             p:loadTimeWeaver-ref="loadTimeWeaver"
             p:jpaVendorAdapter-ref="jpaVendorAdaptor"
             p:jpaDialect-ref="jpaDialect"/>
    <bean id="jpaProvider" class="org.hibernate.jpa.HibernatePersistenceProvider" />
    <bean id="loadTimeWeaver" class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
    <bean id="jpaVendorAdaptor" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="database" value="MYSQL" />
        <property name="databasePlatform" value="org.hibernate.dialect.MySQL5Dialect" />
        <property name="generateDdl" value="true" />
        <property name="showSql" value="true" />
    </bean>
    <bean id="jpaDialect" class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
    <util:properties id="jpaProperties">
        <prop key="hibernate.cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>
        <prop key="hibernate.hbm2ddl.auto">update</prop>
        <prop key="hibernate.format_sql">true</prop>
        <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
        <prop key="hibernate.transaction.jta.platform">org.hibernate.service.jta.platform.internal.WeblogicJtaPlatform</prop>
        <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
    </util:properties>
    <util:list id="packageToScan">
        <value>com.yao.oa.domains</value>
    </util:list>
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager" lazy-init="true">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>
    <tx:annotation-driven />
    <context:component-scan base-package="com.yao.oa">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>
</beans>
